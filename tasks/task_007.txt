# Task ID: 7
# Title: Reporting and Analytics with Rails
# Status: pending
# Dependencies: 6
# Priority: medium
# Description: Implement reporting and analytics features using Rails
# Details:
Build request listing with sorting/filtering using Rails scopes. Create detailed request views with proper authorization. Implement summary overview for Treasury using Rails views and Stimulus for interactivity.

# Test Strategy:
Verify reporting functionality and data accuracy with system tests

# Subtasks:
## 1. Implement Request Listing with Sorting and Filtering [pending]
### Dependencies: None
### Description: Create a paginated request listing view with sorting and filtering capabilities using Rails scopes
### Details:
Define Rails scopes in the Request model for filtering by status, date range, and request type. Implement controller actions to handle sorting parameters. Create a view with sortable column headers and filter form. Use Kaminari or will_paginate for pagination. Ensure proper SQL optimization for performance.

## 2. Build Detailed Request View with Authorization [pending]
### Dependencies: 7.1
### Description: Create a detailed view for individual requests with proper authorization checks
### Details:
Implement a show action in the RequestsController with proper authorization using Pundit or CanCanCan. Design a detailed view template showing all request attributes, history, and status. Add conditional rendering based on user roles. Implement breadcrumbs for navigation back to the listing.

## 3. Create Summary Dashboard for Treasury [pending]
### Dependencies: 7.1
### Description: Implement a dashboard view with summary statistics and charts for Treasury users
### Details:
Create a DashboardController with actions for Treasury users. Implement data aggregation methods to calculate summary statistics (total requests, amounts by status, etc.). Design a dashboard view with cards for key metrics. Use Chartkick or similar for basic charts. Ensure proper authorization for Treasury-only access.

## 4. Add Interactive Filtering with Stimulus [pending]
### Dependencies: 7.1, 7.3
### Description: Enhance the listing and dashboard with interactive filtering using Stimulus.js
### Details:
Create Stimulus controllers for filter forms and charts. Implement debounced filter inputs that update results without full page reloads. Add date range pickers with Stimulus integration. Implement controller endpoints that respond to both HTML and JSON formats. Use Turbo Frames or Turbo Streams for partial page updates.

## 5. Implement Data Export Functionality [pending]
### Dependencies: 7.1, 7.2
### Description: Add functionality to export filtered request data in CSV and PDF formats
### Details:
Extend the RequestsController to handle CSV and PDF format requests. Use CSV library for CSV generation with proper header formatting. Implement PDF generation using Prawn or Wicked PDF. Create a service object to encapsulate export logic. Add export buttons to the listing view with proper styling. Include all relevant fields and respect current filters in exports.

