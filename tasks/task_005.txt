# Task ID: 5
# Title: Request Approval Workflow with Hotwire
# Status: pending
# Dependencies: 4
# Priority: high
# Description: Implement the request approval and processing system using Rails and Hotwire
# Details:
Build approval interface for Country/Chapter admins using Hotwire for real-time updates. Implement notification system using Action Cable. Create Treasury processing workflow with proper authorization.

# Test Strategy:
Verify approval workflow and notification system with integration tests

# Subtasks:
## 1. Create Request Approval Data Models [pending]
### Dependencies: None
### Description: Design and implement the database models for the approval workflow system, including requests, approvals, and status tracking.
### Details:
Create Rails models for Request, Approval, and related entities. Include associations between Users, Country/Chapter admins, and Treasury roles. Implement state machine for request status (pending, approved, rejected, processing). Add validations and scopes for filtering requests by status and ownership.

## 2. Build Admin Approval Interface with Turbo Frames [pending]
### Dependencies: 5.1
### Description: Implement the UI for Country/Chapter admins to view, filter, and approve/reject requests using Hotwire Turbo Frames for seamless updates.
### Details:
Create controller actions for listing, filtering, and updating requests. Design Turbo Frame-based views with request cards that can be updated in-place. Implement approve/reject buttons that trigger Turbo Stream updates. Add filtering by status, date, and requester. Include pagination for request lists.

## 3. Implement Real-time Notifications with Action Cable [pending]
### Dependencies: 5.1, 5.2
### Description: Create a notification system using Action Cable to alert users about request status changes and admin actions.
### Details:
Set up Action Cable channels for notifications. Create a Notification model to store user notifications. Implement broadcast callbacks on Request model state changes. Build a notification UI component with Turbo Streams for real-time updates. Add notification preferences for users.

## 4. Develop Treasury Processing Workflow [pending]
### Dependencies: 5.1, 5.2
### Description: Build the interface and business logic for Treasury staff to process approved requests with proper authorization controls.
### Details:
Create Treasury-specific controller and views. Implement processing steps (review, payment initiation, completion). Add authorization using Pundit policies to restrict actions to Treasury roles. Build audit logging for all Treasury actions. Implement batch processing capabilities for multiple requests.

## 5. Add Email Notifications and Activity History [pending]
### Dependencies: 5.1, 5.3, 5.4
### Description: Implement email notifications for key workflow events and create an activity history log for each request.
### Details:
Create mailers for request status changes (created, approved, rejected, processed). Implement an ActivityLog model to track all actions on requests. Build a timeline view using Turbo Frames to display the activity history. Add email preference settings for users. Implement background job processing for emails using Sidekiq.

